// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TrackedCarousel should call snapToItem and logAction 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaView
    onInsetsChange={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      onLayout={[Function]}
      style={
        Object {
          "flex": 1,
          "overflow": "hidden",
        }
      }
    >
      <View
        pointerEvents="box-none"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          closing={false}
          gestureVelocityImpact={0.3}
          importantForAccessibility="auto"
          onClose={[Function]}
          onGestureBegin={[Function]}
          onGestureCanceled={[Function]}
          onOpen={[Function]}
          onTransitionStart={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          transitionSpec={
            Object {
              "close": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 0.01,
                  "restSpeedThreshold": 0.01,
                  "stiffness": 1000,
                },
              },
              "open": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 0.01,
                  "restSpeedThreshold": 0.01,
                  "stiffness": 1000,
                },
              },
            }
          }
        >
          <View
            pointerEvents="box-none"
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              enabled={false}
              hitSlop={
                Object {
                  "right": -700,
                }
              }
              maxDeltaY={20}
              minOffsetX={5}
              onHandlerStateChange={[Function]}
            >
              <View
                style={
                  Object {
                    "flex": 1,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="none"
                  style={
                    Object {
                      "backgroundColor": "#fff",
                      "bottom": 0,
                      "left": 0,
                      "position": "absolute",
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": 1,
                        "width": -1,
                      },
                      "shadowOpacity": 0.3,
                      "shadowRadius": 5,
                      "top": 0,
                      "width": 3,
                    }
                  }
                />
                <View
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "backgroundColor": "rgb(242, 242, 242)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <RCTScrollView
                        actionParams={
                          Object {
                            "action": "Horizontal scroll of more lifestyle tips",
                            "category": "LIFESTYLE_OVERVIEW",
                          }
                        }
                        activeAnimationOptions={null}
                        activeAnimationType="timing"
                        activeSlideAlignment="center"
                        activeSlideOffset={20}
                        apparitionDelay={0}
                        automaticallyAdjustContentInsets={false}
                        autoplay={false}
                        autoplayDelay={1000}
                        autoplayInterval={3000}
                        callbackOffsetMargin={5}
                        containerCustomStyle={Object {}}
                        contentContainerCustomStyle={Object {}}
                        contentContainerStyle={
                          Array [
                            Object {
                              "paddingLeft": 0,
                              "paddingRight": 0,
                            },
                            Object {},
                          ]
                        }
                        data={
                          Array [
                            Object {
                              "text": "Text 1",
                              "title": "Item 1",
                            },
                            Object {
                              "text": "Text 2",
                              "title": "Item 2",
                            },
                          ]
                        }
                        decelerationRate="fast"
                        directionalLockEnabled={true}
                        disableVirtualization={false}
                        enableMomentum={false}
                        enableSnap={true}
                        firstItem={0}
                        getItem={[Function]}
                        getItemCount={[Function]}
                        hasParallaxImages={false}
                        horizontal={true}
                        inactiveSlideOpacity={1}
                        inactiveSlideScale={1}
                        inactiveSlideShift={0}
                        initialNumToRender={6}
                        invertStickyHeaders={false}
                        inverted={false}
                        itemWidth={300}
                        keyExtractor={[Function]}
                        layout="default"
                        lockScrollTimeoutDuration={1000}
                        lockScrollWhileSnapping={false}
                        loop={false}
                        loopClonesPerSide={3}
                        maxToRenderPerBatch={13}
                        numColumns={1}
                        onContentSizeChange={[Function]}
                        onEndReachedThreshold={2}
                        onLayout={[Function]}
                        onMomentumScrollEnd={[Function]}
                        onResponderRelease={[Function]}
                        onScroll={[Function]}
                        onScrollBeginDrag={[Function]}
                        onScrollEndDrag={[Function]}
                        onSnapToItem={[Function]}
                        onStartShouldSetResponderCapture={[Function]}
                        onTouchEnd={[Function]}
                        onTouchStart={[Function]}
                        overScrollMode="never"
                        pinchGestureEnabled={false}
                        removeClippedSubviews={true}
                        renderItem={[Function]}
                        scrollEnabled={true}
                        scrollEventThrottle={1}
                        scrollsToTop={false}
                        shouldOptimizeUpdates={true}
                        showsHorizontalScrollIndicator={false}
                        showsVerticalScrollIndicator={false}
                        slideStyle={Object {}}
                        sliderWidth={300}
                        stickyHeaderIndices={Array []}
                        style={
                          Object {
                            "flexDirection": "row",
                            "opacity": 0,
                            "width": 300,
                          }
                        }
                        swipeThreshold={20}
                        updateCellsBatchingPeriod={50}
                        useScrollView={false}
                        vertical={false}
                        viewabilityConfigCallbackPairs={Array []}
                        windowSize={13}
                      >
                        <View>
                          <View
                            onLayout={[Function]}
                            style={
                              Array [
                                Object {
                                  "flexDirection": "row",
                                },
                                null,
                              ]
                            }
                          >
                            <View
                              pointerEvents="box-none"
                              style={
                                Array [
                                  Object {
                                    "width": 300,
                                  },
                                  Object {},
                                  Object {},
                                ]
                              }
                            >
                              <Text>
                                Text 1
                              </Text>
                            </View>
                          </View>
                          <View
                            onLayout={[Function]}
                            style={
                              Array [
                                Object {
                                  "flexDirection": "row",
                                },
                                null,
                              ]
                            }
                          >
                            <View
                              pointerEvents="box-none"
                              style={
                                Array [
                                  Object {
                                    "width": 300,
                                  },
                                  Object {},
                                  Object {},
                                ]
                              }
                            >
                              <Text>
                                Text 2
                              </Text>
                            </View>
                          </View>
                        </View>
                      </RCTScrollView>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RNCSafeAreaView>
</View>
`;
