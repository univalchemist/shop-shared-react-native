// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProfileMemberModal should indicate the selected member field 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaView
    onInsetsChange={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      onLayout={[Function]}
      style={
        Object {
          "flex": 1,
          "overflow": "hidden",
        }
      }
    >
      <View
        pointerEvents="box-none"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          closing={false}
          gestureVelocityImpact={0.3}
          importantForAccessibility="auto"
          onClose={[Function]}
          onGestureBegin={[Function]}
          onGestureCanceled={[Function]}
          onOpen={[Function]}
          onTransitionStart={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          transitionSpec={
            Object {
              "close": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 0.01,
                  "restSpeedThreshold": 0.01,
                  "stiffness": 1000,
                },
              },
              "open": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 0.01,
                  "restSpeedThreshold": 0.01,
                  "stiffness": 1000,
                },
              },
            }
          }
        >
          <View
            pointerEvents="box-none"
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              enabled={false}
              hitSlop={
                Object {
                  "right": -700,
                }
              }
              maxDeltaY={20}
              minOffsetX={5}
              onHandlerStateChange={[Function]}
            >
              <View
                style={
                  Object {
                    "flex": 1,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="none"
                  style={
                    Object {
                      "backgroundColor": "#fff",
                      "bottom": 0,
                      "left": 0,
                      "position": "absolute",
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": 1,
                        "width": -1,
                      },
                      "shadowOpacity": 0.3,
                      "shadowRadius": 5,
                      "top": 0,
                      "width": 3,
                    }
                  }
                />
                <View
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "backgroundColor": "rgb(242, 242, 242)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        bg="gray.7"
                        flex={1}
                        onLayout={[Function]}
                        style={
                          Array [
                            Object {
                              "backgroundColor": "#f9f9f9",
                              "flexBasis": 0,
                              "flexGrow": 1,
                              "flexShrink": 1,
                            },
                          ]
                        }
                      >
                        <RCTScrollView
                          automaticallyAdjustContentInsets={false}
                          contentInset={
                            Object {
                              "bottom": 0,
                            }
                          }
                          enableAutomaticScroll={true}
                          enableOnAndroid={false}
                          enableResetScrollToCoords={true}
                          extraHeight={75}
                          extraScrollHeight={0}
                          getScrollResponder={[Function]}
                          handleOnScroll={[Function]}
                          innerRef={[Function]}
                          keyboardDismissMode="on-drag"
                          keyboardOpeningTime={250}
                          keyboardShouldPersistTaps="handled"
                          keyboardSpace={0}
                          onScroll={[Function]}
                          onScrollBeginDrag={null}
                          resetKeyboardSpace={[Function]}
                          scrollEventThrottle={16}
                          scrollForExtraHeightOnAndroid={[Function]}
                          scrollIndicatorInsets={
                            Object {
                              "right": 1,
                            }
                          }
                          scrollIntoView={[Function]}
                          scrollToEnd={[Function]}
                          scrollToFocusedInput={[Function]}
                          scrollToPosition={[Function]}
                          showsVerticalScrollIndicator={true}
                          update={[Function]}
                          viewIsInsideTabBar={false}
                        >
                          <View>
                            <RCTScrollView
                              ListFooterComponent={
                                <ForwardRef
                                  pb={24}
                                />
                              }
                              data={
                                Array [
                                  Object {
                                    "key": "3",
                                    "role": "Employee",
                                    "value": "testfullname 3",
                                  },
                                  Object {
                                    "key": "27",
                                    "role": "Dependent",
                                    "value": "testdep fullname 27",
                                  },
                                ]
                              }
                              disableVirtualization={false}
                              getItem={[Function]}
                              getItemCount={[Function]}
                              horizontal={false}
                              initialNumToRender={10}
                              keyExtractor={[Function]}
                              maxToRenderPerBatch={10}
                              numColumns={1}
                              onContentSizeChange={[Function]}
                              onEndReachedThreshold={2}
                              onLayout={[Function]}
                              onMomentumScrollEnd={[Function]}
                              onScroll={[Function]}
                              onScrollBeginDrag={[Function]}
                              onScrollEndDrag={[Function]}
                              removeClippedSubviews={false}
                              renderItem={[Function]}
                              scrollEventThrottle={50}
                              stickyHeaderIndices={Array []}
                              updateCellsBatchingPeriod={50}
                              viewabilityConfigCallbackPairs={Array []}
                              windowSize={21}
                            >
                              <View>
                                <View
                                  onLayout={[Function]}
                                  style={null}
                                >
                                  <View
                                    accessible={true}
                                    focusable={true}
                                    isTVSelectable={true}
                                    onClick={[Function]}
                                    onResponderGrant={[Function]}
                                    onResponderMove={[Function]}
                                    onResponderRelease={[Function]}
                                    onResponderTerminate={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    style={null}
                                  >
                                    <View
                                      alignItems="center"
                                      flexDirection="row"
                                      justifyContent="space-between"
                                      style={
                                        Array [
                                          Object {
                                            "alignItems": "center",
                                            "backgroundColor": "#f9f9f9",
                                            "borderBottomColor": "#e1e1e1",
                                            "borderBottomWidth": 1,
                                            "display": "flex",
                                            "flexDirection": "row",
                                            "flexWrap": "wrap",
                                            "justifyContent": "space-between",
                                            "paddingBottom": 18,
                                            "paddingLeft": 32,
                                            "paddingRight": 32,
                                            "paddingTop": 18,
                                          },
                                          null,
                                        ]
                                      }
                                    >
                                      <View
                                        flex={1}
                                        style={
                                          Array [
                                            Object {
                                              "flexBasis": 0,
                                              "flexGrow": 1,
                                              "flexShrink": 1,
                                            },
                                          ]
                                        }
                                      >
                                        <Text
                                          color="gray.1"
                                          fontFamily="default"
                                          fontSize={16}
                                          letterSpacing={0.15}
                                          lineHeight={24}
                                          style={
                                            Array [
                                              Object {
                                                "color": "#646464",
                                                "fontFamily": "Arial",
                                                "fontSize": 16,
                                                "letterSpacing": 0.15,
                                                "lineHeight": 24,
                                              },
                                            ]
                                          }
                                        >
                                          testfullname 3
                                        </Text>
                                      </View>
                                      <View
                                        style={
                                          Array [
                                            Object {
                                              "paddingLeft": 8,
                                            },
                                          ]
                                        }
                                      >
                                        <View>
                                          <View
                                            replaceTheme={[Function]}
                                            style={
                                              Object {
                                                "alignItems": "center",
                                                "backgroundColor": "transparent",
                                                "justifyContent": "center",
                                              }
                                            }
                                            theme={
                                              Object {
                                                "colors": Object {
                                                  "disabled": "hsl(208, 8%, 90%)",
                                                  "divider": "#bcbbc1",
                                                  "error": "#ff190c",
                                                  "grey0": "#393e42",
                                                  "grey1": "#43484d",
                                                  "grey2": "#5e6977",
                                                  "grey3": "#86939e",
                                                  "grey4": "#bdc6cf",
                                                  "grey5": "#e1e8ee",
                                                  "greyOutline": "#bbb",
                                                  "platform": Object {
                                                    "android": Object {
                                                      "error": "#f44336",
                                                      "primary": "#2196f3",
                                                      "secondary": "#9C27B0",
                                                      "success": "#4caf50",
                                                      "warning": "#ffeb3b",
                                                    },
                                                    "ios": Object {
                                                      "error": "#ff3b30",
                                                      "primary": "#007aff",
                                                      "secondary": "#5856d6",
                                                      "success": "#4cd964",
                                                      "warning": "#ffcc00",
                                                    },
                                                  },
                                                  "primary": "#2089dc",
                                                  "searchBg": "#303337",
                                                  "secondary": "#8F0CE8",
                                                  "success": "#52c41a",
                                                  "warning": "#faad14",
                                                },
                                              }
                                            }
                                            underlayColor="white"
                                            updateTheme={[Function]}
                                          >
                                            <Text
                                              allowFontScaling={false}
                                              style={
                                                Array [
                                                  Object {
                                                    "color": "black",
                                                    "fontSize": 24,
                                                  },
                                                  Object {
                                                    "backgroundColor": "transparent",
                                                  },
                                                  Object {
                                                    "fontFamily": "Material Icons",
                                                    "fontStyle": "normal",
                                                    "fontWeight": "normal",
                                                  },
                                                  Object {},
                                                ]
                                              }
                                              testID="iconIcon"
                                            >
                                              
                                            </Text>
                                          </View>
                                        </View>
                                      </View>
                                    </View>
                                  </View>
                                </View>
                                <View
                                  onLayout={[Function]}
                                  style={null}
                                >
                                  <View
                                    accessible={true}
                                    focusable={true}
                                    isTVSelectable={true}
                                    onClick={[Function]}
                                    onResponderGrant={[Function]}
                                    onResponderMove={[Function]}
                                    onResponderRelease={[Function]}
                                    onResponderTerminate={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    style={null}
                                  >
                                    <View
                                      alignItems="center"
                                      flexDirection="row"
                                      justifyContent="space-between"
                                      style={
                                        Array [
                                          Object {
                                            "alignItems": "center",
                                            "backgroundColor": "#f9f9f9",
                                            "borderBottomColor": "#e1e1e1",
                                            "borderBottomWidth": 1,
                                            "display": "flex",
                                            "flexDirection": "row",
                                            "flexWrap": "wrap",
                                            "justifyContent": "space-between",
                                            "paddingBottom": 18,
                                            "paddingLeft": 32,
                                            "paddingRight": 32,
                                            "paddingTop": 18,
                                          },
                                          null,
                                        ]
                                      }
                                    >
                                      <View
                                        flex={1}
                                        style={
                                          Array [
                                            Object {
                                              "flexBasis": 0,
                                              "flexGrow": 1,
                                              "flexShrink": 1,
                                            },
                                          ]
                                        }
                                      >
                                        <Text
                                          color="gray.1"
                                          fontFamily="default"
                                          fontSize={16}
                                          letterSpacing={0.15}
                                          lineHeight={24}
                                          style={
                                            Array [
                                              Object {
                                                "color": "#646464",
                                                "fontFamily": "Arial",
                                                "fontSize": 16,
                                                "letterSpacing": 0.15,
                                                "lineHeight": 24,
                                              },
                                            ]
                                          }
                                        >
                                          testdep fullname 27
                                        </Text>
                                      </View>
                                    </View>
                                  </View>
                                </View>
                                <View
                                  onLayout={[Function]}
                                >
                                  <View
                                    pb={24}
                                    style={
                                      Array [
                                        Object {
                                          "paddingBottom": 24,
                                        },
                                      ]
                                    }
                                  />
                                </View>
                              </View>
                            </RCTScrollView>
                          </View>
                        </RCTScrollView>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RNCSafeAreaView>
</View>
`;

exports[`ProfileMemberModal should render correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaView
    onInsetsChange={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      onLayout={[Function]}
      style={
        Object {
          "flex": 1,
          "overflow": "hidden",
        }
      }
    >
      <View
        pointerEvents="box-none"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          closing={false}
          gestureVelocityImpact={0.3}
          importantForAccessibility="auto"
          onClose={[Function]}
          onGestureBegin={[Function]}
          onGestureCanceled={[Function]}
          onOpen={[Function]}
          onTransitionStart={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          transitionSpec={
            Object {
              "close": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 0.01,
                  "restSpeedThreshold": 0.01,
                  "stiffness": 1000,
                },
              },
              "open": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 0.01,
                  "restSpeedThreshold": 0.01,
                  "stiffness": 1000,
                },
              },
            }
          }
        >
          <View
            pointerEvents="box-none"
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              enabled={false}
              hitSlop={
                Object {
                  "right": -700,
                }
              }
              maxDeltaY={20}
              minOffsetX={5}
              onHandlerStateChange={[Function]}
            >
              <View
                style={
                  Object {
                    "flex": 1,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="none"
                  style={
                    Object {
                      "backgroundColor": "#fff",
                      "bottom": 0,
                      "left": 0,
                      "position": "absolute",
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": 1,
                        "width": -1,
                      },
                      "shadowOpacity": 0.3,
                      "shadowRadius": 5,
                      "top": 0,
                      "width": 3,
                    }
                  }
                />
                <View
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "backgroundColor": "rgb(242, 242, 242)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        bg="gray.7"
                        flex={1}
                        onLayout={[Function]}
                        style={
                          Array [
                            Object {
                              "backgroundColor": "#f9f9f9",
                              "flexBasis": 0,
                              "flexGrow": 1,
                              "flexShrink": 1,
                            },
                          ]
                        }
                      >
                        <RCTScrollView
                          automaticallyAdjustContentInsets={false}
                          contentInset={
                            Object {
                              "bottom": 0,
                            }
                          }
                          enableAutomaticScroll={true}
                          enableOnAndroid={false}
                          enableResetScrollToCoords={true}
                          extraHeight={75}
                          extraScrollHeight={0}
                          getScrollResponder={[Function]}
                          handleOnScroll={[Function]}
                          innerRef={[Function]}
                          keyboardDismissMode="on-drag"
                          keyboardOpeningTime={250}
                          keyboardShouldPersistTaps="handled"
                          keyboardSpace={0}
                          onScroll={[Function]}
                          onScrollBeginDrag={null}
                          resetKeyboardSpace={[Function]}
                          scrollEventThrottle={16}
                          scrollForExtraHeightOnAndroid={[Function]}
                          scrollIndicatorInsets={
                            Object {
                              "right": 1,
                            }
                          }
                          scrollIntoView={[Function]}
                          scrollToEnd={[Function]}
                          scrollToFocusedInput={[Function]}
                          scrollToPosition={[Function]}
                          showsVerticalScrollIndicator={true}
                          update={[Function]}
                          viewIsInsideTabBar={false}
                        >
                          <View>
                            <RCTScrollView
                              ListFooterComponent={
                                <ForwardRef
                                  pb={24}
                                />
                              }
                              data={
                                Array [
                                  Object {
                                    "key": "3",
                                    "role": "Employee",
                                    "value": "testfullname 3",
                                  },
                                  Object {
                                    "key": "27",
                                    "role": "Dependent",
                                    "value": "testdep fullname 27",
                                  },
                                ]
                              }
                              disableVirtualization={false}
                              getItem={[Function]}
                              getItemCount={[Function]}
                              horizontal={false}
                              initialNumToRender={10}
                              keyExtractor={[Function]}
                              maxToRenderPerBatch={10}
                              numColumns={1}
                              onContentSizeChange={[Function]}
                              onEndReachedThreshold={2}
                              onLayout={[Function]}
                              onMomentumScrollEnd={[Function]}
                              onScroll={[Function]}
                              onScrollBeginDrag={[Function]}
                              onScrollEndDrag={[Function]}
                              removeClippedSubviews={false}
                              renderItem={[Function]}
                              scrollEventThrottle={50}
                              stickyHeaderIndices={Array []}
                              updateCellsBatchingPeriod={50}
                              viewabilityConfigCallbackPairs={Array []}
                              windowSize={21}
                            >
                              <View>
                                <View
                                  onLayout={[Function]}
                                  style={null}
                                >
                                  <View
                                    accessible={true}
                                    focusable={true}
                                    isTVSelectable={true}
                                    onClick={[Function]}
                                    onResponderGrant={[Function]}
                                    onResponderMove={[Function]}
                                    onResponderRelease={[Function]}
                                    onResponderTerminate={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    style={null}
                                  >
                                    <View
                                      alignItems="center"
                                      flexDirection="row"
                                      justifyContent="space-between"
                                      style={
                                        Array [
                                          Object {
                                            "alignItems": "center",
                                            "backgroundColor": "#f9f9f9",
                                            "borderBottomColor": "#e1e1e1",
                                            "borderBottomWidth": 1,
                                            "display": "flex",
                                            "flexDirection": "row",
                                            "flexWrap": "wrap",
                                            "justifyContent": "space-between",
                                            "paddingBottom": 18,
                                            "paddingLeft": 32,
                                            "paddingRight": 32,
                                            "paddingTop": 18,
                                          },
                                          null,
                                        ]
                                      }
                                    >
                                      <View
                                        flex={1}
                                        style={
                                          Array [
                                            Object {
                                              "flexBasis": 0,
                                              "flexGrow": 1,
                                              "flexShrink": 1,
                                            },
                                          ]
                                        }
                                      >
                                        <Text
                                          color="gray.1"
                                          fontFamily="default"
                                          fontSize={16}
                                          letterSpacing={0.15}
                                          lineHeight={24}
                                          style={
                                            Array [
                                              Object {
                                                "color": "#646464",
                                                "fontFamily": "Arial",
                                                "fontSize": 16,
                                                "letterSpacing": 0.15,
                                                "lineHeight": 24,
                                              },
                                            ]
                                          }
                                        >
                                          testfullname 3
                                        </Text>
                                      </View>
                                    </View>
                                  </View>
                                </View>
                                <View
                                  onLayout={[Function]}
                                  style={null}
                                >
                                  <View
                                    accessible={true}
                                    focusable={true}
                                    isTVSelectable={true}
                                    onClick={[Function]}
                                    onResponderGrant={[Function]}
                                    onResponderMove={[Function]}
                                    onResponderRelease={[Function]}
                                    onResponderTerminate={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    style={null}
                                  >
                                    <View
                                      alignItems="center"
                                      flexDirection="row"
                                      justifyContent="space-between"
                                      style={
                                        Array [
                                          Object {
                                            "alignItems": "center",
                                            "backgroundColor": "#f9f9f9",
                                            "borderBottomColor": "#e1e1e1",
                                            "borderBottomWidth": 1,
                                            "display": "flex",
                                            "flexDirection": "row",
                                            "flexWrap": "wrap",
                                            "justifyContent": "space-between",
                                            "paddingBottom": 18,
                                            "paddingLeft": 32,
                                            "paddingRight": 32,
                                            "paddingTop": 18,
                                          },
                                          null,
                                        ]
                                      }
                                    >
                                      <View
                                        flex={1}
                                        style={
                                          Array [
                                            Object {
                                              "flexBasis": 0,
                                              "flexGrow": 1,
                                              "flexShrink": 1,
                                            },
                                          ]
                                        }
                                      >
                                        <Text
                                          color="gray.1"
                                          fontFamily="default"
                                          fontSize={16}
                                          letterSpacing={0.15}
                                          lineHeight={24}
                                          style={
                                            Array [
                                              Object {
                                                "color": "#646464",
                                                "fontFamily": "Arial",
                                                "fontSize": 16,
                                                "letterSpacing": 0.15,
                                                "lineHeight": 24,
                                              },
                                            ]
                                          }
                                        >
                                          testdep fullname 27
                                        </Text>
                                      </View>
                                    </View>
                                  </View>
                                </View>
                                <View
                                  onLayout={[Function]}
                                >
                                  <View
                                    pb={24}
                                    style={
                                      Array [
                                        Object {
                                          "paddingBottom": 24,
                                        },
                                      ]
                                    }
                                  />
                                </View>
                              </View>
                            </RCTScrollView>
                          </View>
                        </RCTScrollView>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RNCSafeAreaView>
</View>
`;
